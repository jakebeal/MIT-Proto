;; init:     (flip 0.1 'leader 'follower)
;; leader:   (flip 0.1 'follower 'leader)
;; follower: (if (< leader-grad threshold) (flip 0.1 'leader 'follower))

def elect ():
    feedback(s) init {
        flip(0.1, 'leader, 'follower)
    } update {
        mux(s == 'leader, \
            flip(0.001, 'follower, 'leader), \
	    mux(gradient(s == 'leader) > 400, \
		flip(0.001, 'follower, 'leader), \
		'follower))
    }
    s == 'leader
