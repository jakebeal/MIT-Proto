include_dirs = Split('. ../ ../shared ../kernel')
libs = Split('sim kernel compiler shared gl glu dl')
lib_dirs = Split('./.libs ../shared/.libs ../kernel/.libs ../compiler/.libs')
installed_plugins_dir = Split('plugin_lib')
u = Tool('opengl')
env = Environment()
u(env)
# shared library for distributions
distributions_source_files = Split('XGrid.cpp FixedPoint.cpp Grid.cpp GridRandom.cpp Cylinder.cpp Torus.cpp DistributionsPlugin.cpp')
dist_dll = env.SharedLibrary('distributions', source = distributions_source_files, CPPPATH = include_dirs, LIBS = libs, LIBPATH = lib_dirs)
Install(dir = installed_plugins_dir, source = dist_dll)

# shared library for SimpleLifeCycle plugin
simple_life_cycle_layer_source_files = Split('SimpleLifeCycle.cpp SimpleLifeCyclePlugin.cpp')
slc_dll = SharedLibrary('simple-life-cycle', source = simple_life_cycle_layer_source_files, CPPPATH = include_dirs, LIBS = libs, LIBPATH = lib_dirs)
Install(dir = installed_plugins_dir, source = slc_dll)
#StaticLibrary('simple-life-cycle', source = simple_life_cycle_layer_source_files, CPPPATH = include_dirs, LIBS = libs, LIBPATH = lib_dirs)

# shared library for Mica2Motes plugin
mica2mote_layer_source_files = Split('Mica2Mote.cpp Mica2MotePlugin.cpp')
m2m_dll = SharedLibrary('mica2mote', source = mica2mote_layer_source_files, CPPPATH = include_dirs, LIBS = libs, LIBPATH = lib_dirs)
Install(dir = installed_plugins_dir, source = m2m_dll)

# shared library for radio plugin
radio_models_layer_source_files = Split('RadioModelsPlugin.cpp wormhole-radio.cpp multiradio.cpp')
rm_dll = SharedLibrary('radiomodels', source = radio_models_layer_source_files, CPPPATH = include_dirs, LIBS = libs, LIBPATH = lib_dirs)
Install(dir = installed_plugins_dir, source = rm_dll)

registry_source_files = Split('createRegistry.cpp')
registry_includes = Split('../shared')
registry_lib_dirs = Split('../shared/.libs')
registry_libs = Split('shared dl')
Program(source = registry_source_files, CPPPATH = registry_includes, LIBPATH = registry_lib_dirs, LIBS = registry_libs)